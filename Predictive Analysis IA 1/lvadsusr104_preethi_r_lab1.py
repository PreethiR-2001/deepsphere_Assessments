# -*- coding: utf-8 -*-
"""LVADSUSR104_Preethi R_LAB1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UiNy0fXdX3MOIKfO1xNb4JldmsFCJkI9
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import mean_squared_error
import seaborn as sns
import matplotlib.pyplot as plt

#1
df = pd.read_csv('/content/expenses.csv')
#df.head()

print(df.isnull().sum())
print("We don't have any missing values")

q1 = df['charges'].quantile(0.25)
q3 = df['charges'].quantile(0.75)
iqr = q3 - q1
print(iqr)

lower_limit = q1 - (1.5*iqr)
upper_limit = q3 + (1.5*iqr)

df[~(df['charges'] < lower_limit) | (df['charges'] > upper_limit)]

print("Outliers are dropped")

#2
print(df.head())
df1 = df.copy()
lb=LabelEncoder()
df1['sex']=lb.fit_transform(df['sex'])
df1['smoker']=lb.fit_transform(df['smoker'])
df1['region']=lb.fit_transform(df['region'])
print(df1)

#3
sns.pairplot(df)
plt.show()


corr_matrix = df.corr()
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm')
plt.title("Correlation Matrix")
plt.show()


df1 = df1.drop_duplicates()
print("Duplicates are dropped")
x = df1[['age','sex','bmi','children','smoker']]
y = df1[['charges']]

print("We need all the columns to predict insurance charges.")

#4
x_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.3)
print("dataset is splitted in ratio of 70:30 for train data:test data")

#5
lr = LinearRegression()
vt = lr.fit(x_train, y_train)
vop = lr.predict(x_test)

#6
mse = mean_squared_error(y_test, vop)
print("Mean Squared Error:", mse)