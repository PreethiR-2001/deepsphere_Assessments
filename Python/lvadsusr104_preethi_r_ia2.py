# -*- coding: utf-8 -*-
"""LVADSUSR104-Preethi R-IA2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s611mMICnkX9rFdFQv1DqFT9dzTjt1Gu
"""

import pandas as pd
import numpy as np

#1
rgb_image = np.array([[[255,0,0],[0,255,0],[0,0,255],
 [255,255,0],[255,0,255],[0,255,255],[127,127,127],
  [200,200,200],[50,50,50]]])


def grayscale(rgb_image):
  res = [0.0]
  for i, val in enumerate(rgb_image):
    res = val[0]*0.2989 + val[1]*0.5870 + val[2]*0.1140
    return res
val = []
val = grayscale(rgb_image)
print(val)

#2
import numpy as np

def normalize_data(data):

    means = np.mean(data, axis=0)
    stds = np.std(data, axis=0)


    normalized_data = (data - means) / stds

    return normalized_data


data = np.array([[170, 70, 30],
                 [165, 65, 25],
                 [180, 80, 35]])

normalized_data = normalize_data(data)

print("Original data:")
print(data)
print("\nNormalized data:")
print(normalized_data)

#3
arr = np.array([[1, 2],[3, 4],[5,6]])
print("initial dimension :", arr.ndim)
arr1 = arr.flatten()
print("After flatten :",arr1.ndim)
print("Initial shape:",arr1.shape)
arr2 = arr1.reshape(2,3)
print("Final shape:",arr2.shape)
print(arr2)

#4
import numpy as np
performances = np.array([
    [10, 12, 15, 18],
    [8, 9, 11, 13],
    [9, 11, 10, 14]
])
first_game = performances[:, 0]
last_game = performances[:, -1]

improvement = last_game - first_game

print("Improvement:")
print(improvement)

#5
import numpy as np
student_scores = np.array([
    [80, 75, 90, 85, 70],
    [60, 65, 70, 75, 80],
    [90, 85, 80, 75, -1],
    [70, 75, 80, 85, 90]
])
def calculate_last_3_avg(scores):

    mask = scores != -1

    scores[scores == -1] = 0
    \
    last_3_sum = np.sum(scores[:, -3:], axis=1)
    \
    num_valid_subjects = np.sum(mask[:, -3:], axis=1)

    last_3_avg = last_3_sum / num_valid_subjects
    return last_3_avg
average_last_3 = calculate_last_3_avg(student_scores)

for i, avg in enumerate(average_last_3):
    print(f"Student {i+1}: Average of last 3 subjects = {avg}")

#6

#7
data = {'Name':['Alice', 'Bob', 'Charlie','David'],
        'Age':[25, 30, 35, 40],
        'City':['NY', 'LA', 'Chicago', 'Houston'],
        'Dept': ['HR','IT', 'Fin', 'Mar']

        }
df = pd.DataFrame(data)
under_45 = (df['Age'] < 45 & df['Dept'] != 'HR')
res = df.loc(under_45)
print(res)

#8
data = { 'Name': ['Apples', 'Banana','Dates'],
        'Category': ['Fru','Fru','Fru'],
         'Val': [0.2, 0.5, 2.5],
         'Pro': [True, False, False]
}

df = pd.DataFrame(data)
sum_all = df.aggregate(['sum'])
avg = sum_all
print(avg)

res = (df['Val'] > avg & df['Pro'] == False)
locat = df.loc[res]
print(locat)

#9
emp_data = {
    'Emp':['A','B'],
    'Dep':['HR','IT'],
    'Mng': ['J','R']
}
df1 = pd.DataFrame(emp_data)

print(df1)

#10
data = {
    'Dept': ['E','E','C'],
    'Salesper': ['A','B','C'],
    'Sales':[7000, 5000, 3000]

}
df = pd.DataFrame(data)
res = np.mean(df)
print(res)